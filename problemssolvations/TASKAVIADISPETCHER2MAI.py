# Авиадиспетчер Сергей увлекается информатикой и коллекционирует старинные открытки и фотографии, посвященные авиации. Он придумал систему регистрации предметов коллекции, в которой всем предметам присвоены числовые идентификаторы в разных системах счисления, при этом в записи каждого идентификатора обязательно присутствует старшая цифра из алфавита использованной системы счисления. Идентификаторы предметов коллекции особой ценности обязательно являются чётными числами в системе счисления с наименьшим возможным основанием, при условии, что это основание чётно. Например, 7 – наименьшее возможное основание системы счисления числа 6213405. Примечание. Латинскими буквами обозначены цифры, числовое значение которых превышает 9. Ниже приведены числа-идентификаторы нескольких предметов коллекции Сергея. Выберите среди них все идентификаторы предметов коллекции особой ценности. A. 123412326443235 B. 27B2A45567A1 C. 3724C59346A2 D. 47H72A458873 E. 5T7F216A131293 F. 62A4F1657A1 G. 7341K169851A16 H. 871GP3146A16 I. 92387W671234F2 J. 122123211212
def is_even_in_base(number, base):
    """Проверяет, является ли число четным в данной системе счисления."""
    decimal_value = int(number, base)
    return decimal_value % 2 == 0


def find_min_base(identifier):
    """Находит наименьшее основание системы счисления для идентификатора."""
    # Определяем старшую цифру
    max_digit = max(identifier, key=lambda x: int(x, 36))  # int(x, 36) преобразует цифры и буквы
    return int(max_digit, 36) + 1  # Основание = старшая цифра + 1


def find_valuable_items(identifiers):
    """Находит идентификаторы предметов коллекции особой ценности."""
    valuable_items = []

    for identifier in identifiers:
        min_base = find_min_base(identifier)
        if min_base % 2 == 0:  # Основание четное
            if is_even_in_base(identifier, min_base):  # Число четное
                valuable_items.append(identifier)

    return valuable_items


# Список идентификаторов
identifiers = {
    "A": "123412326443235",
    "B": "27B2A45567A1",
    "C": "3724C59346A2",
    "D": "47H72A458873",
    "E": "5T7F216A131293",
    "F": "62A4F1657A1",
    "G": "7341K169851A16",
    "H": "871GP3146A16",
    "I": "92387W671234F2",
    "J": "122123211212"
}

# Находим предметы коллекции особой ценности
valuable_items = find_valuable_items(identifiers.values())

# Выводим результаты
print("Идентификаторы предметов коллекции особой ценности:")
for key, identifier in identifiers.items():
    if identifier in valuable_items:
        print(f"{key}: {identifier}")
